/* eslint-disable react-hooks/exhaustive-deps */
import { useWallet } from '@solana/wallet-adapter-react'
import { CandyMachineList } from 'components'
import { useRPC } from 'hooks'
import { candyMachinesState } from 'lib/recoil-store/atoms'
import { fetchCandyMachineAccounts } from 'lib/utils'
import type { NextPage } from 'next'
import Head from 'next/head'
import Link from 'next/link'
import { useEffect, useState } from 'react'
import { useRecoilState } from 'recoil'
import { Spinner } from '@primer/react'

const ManageCandyMachines: NextPage = () => {
    const [accounts, setAccounts] = useRecoilState(candyMachinesState)
    const [isLoading, setIsLoading] = useState(false)
    const [error, setError] = useState(false)
    const { rpcEndpoint } = useRPC()
    const { publicKey } = useWallet()

    const fetchAccounts = async () => {
        try {
            const accounts = await fetchCandyMachineAccounts(rpcEndpoint, publicKey!)
            setAccounts(accounts)
            setError(false)
        } catch (err) {
            console.error(err)
        }
    }

    useEffect(() => {
        setError(false)
        setIsLoading(true)

        fetchAccounts()
            .catch(() => setError(true))
            .finally(() => {
                setIsLoading(false)
            })
    }, [])

    if (isLoading) {
        return (
            <div className='d-flex width-full height-full flex-justify-center flex-items-center'>
                <Spinner />
            </div>
        )
    }

    return (
        <>
            <Head>
                <title>Candy Machines</title>
                <meta name='description' content='Generated by create next app' />
                <link rel='icon' href='/favicon.ico' />
            </Head>
            <div className='flex-col'>
                <div className='d-flex my-5 flex-items-center'>
                    <h2>Candy Machines Â·</h2>
                    <h2 className='ml-2'>{accounts?.length}</h2>
                </div>
                {error ? (
                    <div className='flex flex-col items-center justify-center mt-11'>
                        Error fetching accounts
                        <button className='rounded-lg bg-slate-400 p-2 mt-4' onClick={fetchAccounts}>
                            Fetch again
                        </button>
                    </div>
                ) : !accounts?.length ? (
                    <span className='mt-5'>
                        You have no candy machine accounts.
                        <Link href='/create-candy-machine'>
                            <a className='text-[hsl(258,52%,62%)] hover:underline ml-1'>Create one?</a>
                        </Link>
                    </span>
                ) : (
                    <CandyMachineList candyMachineAccounts={accounts} />
                )}
            </div>
        </>
    )
}

export default ManageCandyMachines
